{# le template hérite de base.html.twig #}
{% extends 'base.html.twig' %}

{# surcharge du bloc title défini dans base.html.twig #}
{% block title %}
    {# {{ parent() }} permet de reprendre le contenu du bloc que l'on surcharge au lieu de le remplacer #}
    {{ parent() }} - Twig
{% endblock %}

{# surcharge du bloc défini dans la base.html.twig #}
{% block body %}
    {# on définie une variable #}
    {%  set test = 'Une variable de test' %}

    {# affiche une variable #}
    <p>{{ test }}</p>

    {# concaténation avec le tilde (~) #}
    <p>{{ test ~ ' !' }}</p>

    {# équivalent d'un var_dump() #}
    {{ dump(test) }}

    {# structure conditionnelle #}
    {% if test != '' %}
        <p>test n'est pas vide</p>
    {% else %}
        <p>test est vide</p>
    {% endif %}

    {% set vrai = true %}
    {% set faux = false %}
    {#
     and et or en toutes lettres
     not en toutes lettres pour la négation
     if ($vrai && !$faux) {
    #}
    {% if vrai and not faux %}
        <p>vrai et vrai et faux n'est pas vrai</p>
    {% endif %}

    {# tableau indexé #}
    {% set tab = [1, 2, 3, 4] %}

    {# foreach ($tab as $nb) #}
    {%  for nb in tab %}
        {{ nb }} <br>
    {% endfor %}

    {# tableau associatif avec une syntaxe json #}
    {% set hash = {foo: 'Foo', bar: 'Bar'} %}

    {% for key, value in hash %}
        {{ key }} : {{ value }}<br>
    {% endfor %}

    {# un élément dans le tableau #}
    <p>{{ hash['foo'] }}</p>
    {# peut aussi s'écrire : #}
    <p>{{ hash.foo }}</p>

    {# la variable loop nous est toujours donnée dans une boucle #}
    {%  for nb in tab %}
        Tour de boucle numero (index 1) :
        {{ dump(loop.index) }} <br>
        Tour de boucle numero (index 0) :
        {{ dump(loop.index0) }} <br>

        {% if loop.first %}
            <p>1er tour de boucle</p>
        {% endif %}

        {% if loop.last %}
            <p>Dernier tour de boucle</p>
        {% endif %}

    {% endfor %}

    {% set vide = [] %}
    {# on peut ajouter un else à une boucle for pour définir ce que l'on fait quand le tableau est vide #}
    {% for element in vide %}
        {{ element }}<br>
    {% else %}
        <p>Le tableau est vide</p>
    {% endfor %}

    {# if (isset($test)) { #}
    {% if test is defined %}
        <p>La variable test existe</p>
    {% endif %}

    {# if (!empty($test)) { #}
    {% if test is not empty %}
        <p>La variable n'est pas vide</p>
    {% endif %}

    {# if (!is_null($test)) { #}
    {% if test is not null %}
        <p>La variable test n'est pas nulle</p>
    {% endif %}

    {# if (in_array(2, $tab) { #}
    {% if 2 in tab %}
        <p>tab contient une valeur 2</p>
    {% endif %}

    {% for nb in tab %}
        {% if loop.index is even %}
            <p>Tour de boucle pair</p>
        {% endif %}
        {% if loop.index is odd %}
            <p>Tour de boucle impair</p>
        {% endif %}
    {% endfor %}

    {% set dix = 10 %}
    {# if ($dix % 5 == 0 #}
    {% if dix is divisible by (5) %}
        <p>Dix est divisible par 5</p>
    {% endif %}

    {# Filtres avec un pipe (|) #}

    {# echo strtoupper($test); #}
    <p>{{ test|upper }}</p>

    {# Le filtre default s'applique si la variable est vide (empty) #}
    <p>{{ var|default('La variable var est vide') }}</p>

    {# formatage de date avec la même syntaxe que la fonction date() sur PHP #}
    <p>{{ '2018-08-06'|date('d/m/Y') }}</p>

    {# fonctionne aussi sur un objet de la classe Datetime de PHP#}
    <p>{{ auj|date('d/m/Y H:i:s') }}</p>

    {# first et last : 1er et dernier élément d'un tableau #}
    <p>{{ tab|first }}</p>

    {% set html = '<p>Un paragraphe</p>' %}

    {# par défaut le html est échappé en utilisant des entités HTML (htmlentities), soit &lt; pour "<"
    et &gt; pour ">" #}
    {{ html }}

    {# pour que le HTML ne soit pas échappé, donc interprété par le navigateur #}
    {{ html|raw }}

    {# inclusion de fichier #}

    {# le chemin du fichier à partir de la racine du répertoire templates #}
    {% include 'twig/inclus.html.twig' %}

    {# only fait que les variables définies dans ce fichier ne sont pas accessibles dans le fichier inclus #}
    {% include 'twig/inclus.html.twig' only %}

    {# passe une variable foo au fichier inclus #}
    {% include 'twig/inclus.html.twig' with {foo: 'variable créée pour inclusion'} %}

    {# ne passe que la variable foo au fichier inclus #}
    {% include 'twig/inclus.html.twig' with {foo: 'variable créée pour inclusion'} only %}

{% endblock %}
